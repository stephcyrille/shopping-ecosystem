"""
Django settings for shopping_web_app project.

Generated by 'django-admin startproject' using Django 4.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from decouple import config
import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0^2daphvdd+_tq=8bmj4q8s)%n((_vl6s=57j*l_skne+4gh0p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
ALLOWED_HOSTS = []
SECURED = False

if 'DEV' == config('MYENV'):
    DEBUG = True
    ALLOWED_HOSTS = ["*"]
    # allow cors
    CORS_ALLOW_CREDENTIALS = True
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",  # Frontend React
        "http://localhost:8000",  # Backend Django
        "http://localhost:9500",  # Backend Odoo
    ]

if 'PROD' == config('MYENV'):
    DEBUG = False
    ALLOWED_HOSTS = ["afroyacadrum.com", "odoo.afroyacadrum.com", "apis.afroyacadrum.com"]

    # Allow CORS
    CORS_ALLOW_CREDENTIALS = True
    CORS_ALLOWED_ORIGINS = [
        "https://afroyacadrum.com",
        "https://odoo.afroyacadrum.com",
        "https://apis.afroyacadrum.com",
    ]
    SECURED = True

    
# If we are in production ENV and we are using https, then set secured to true 


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    "myproxy",
    'rest_framework.authtoken',
    'djoser',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shopping_web_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shopping_web_app.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),  
        'PORT': config('DB_PORT'),
    }
}

# Cache settings
# ... other settings ...

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": f"redis://{config('REDIS_HOST')}:{config('REDIS_PORT')}",
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Edit app backend
AUTHENTICATION_BACKENDS = ["account.auth_backend.EmailBackend"]

# Login and Logout redirect 
LOGIN_URL = 'signin'
LOGOUT_REDIRECT_URL = "signin"


# .ENV Data
ODOO_SERVER_PORT = config('ODOO_SERVER_PORT')
ODOO_USER = config('ODOO_USER')
ODOO_PASSWORD = config('ODOO_PASSWORD')
ODOO_DB = config('ODOO_DB')

if DEBUG:
    ODOO_SERVER_HOST = f"http://{config('ODOO_SERVER_HOST')}"
else:
    # if SECURED:
    #     ODOO_SERVER_HOST = f"https://{config('ODOO_SERVER_HOST')}"
    # else:
    ODOO_SERVER_HOST = f"http://{config('ODOO_SERVER_HOST')}"

#  JWT Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
   "AUTH_HEADER_TYPES": ('JWT',),
   "ACCESS_TOKEN_LIFETIME": timedelta(days=7),
   "REFRESH_TOKEN_LIFETIME": timedelta(days=14),
}

# Djoser settings
DJOSER = {
    'ACTIVATION_URL': 'auth/users/activation/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SET_PASSWORD_RETYPE': True,
    'EMAIL_FRONTEND_DOMAIN': config('FRONTEND_DOMAIN', 'localhost:3000'),   # Custom domain for email links
    'EMAIL_FRONTEND_SITE_NAME': 'Afro Yaca Drum',
    'SERIALIZERS': {
        'user_create': 'myproxy.auth.user_serializer.CustomUserCreateSerializer',
    },
}

# My custom user AUth Model created
AUTH_USER_MODEL = 'myproxy.AydCustomUser'

if 'DEV' == config('MYENV'):
    # Backend for emails
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
else:
    # Email Backend
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

    # SMTP Server Configuration
    EMAIL_HOST = config('EMAIL_HOST')
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
    EMAIL_HOST_USER = config('EMAIL_HOST_USER')
    EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

    # Optional Timeout (in seconds)
    EMAIL_TIMEOUT = 10

    # Default Email Sender
    DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL')